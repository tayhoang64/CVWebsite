@model WebCV.Models.Template
@using Microsoft.AspNetCore.Identity
@using WebCV.Models

@inject SignInManager<User> SignInManager
@inject UserManager<User> UserManager

@{
    ViewData["Title"] = "Create";
}

<div class="container">

    <h4>Tạo mới mẫu CV</h4>
    <hr />
    <div class="row">
        <div class="col-md-4">
            <form asp-action="Create" id="template-form" enctype="multipart/form-data">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <div class="form-group">
                    <label asp-for="Title" class="control-label"></label>
                    <input asp-for="Title" name="title" class="form-control" />
                    <span asp-validation-for="Title" id="title-error" class="text-danger"></span>
                </div>

                <div class="form-group">
                    <label asp-for="File" class="control-label"></label>
                    <input asp-for="File" name="file" onchange="Preview()" type="file" class="form-control" />
                    <span asp-validation-for="File" id="file-error" class="text-danger"></span>
                </div>

                <div class="form-group">
                    <label asp-for="Image" class="control-label"></label>
                    <input asp-for="Image" accept="image/png" name="image" type="file" class="form-control" />
                    <span asp-validation-for="Image" id="image-error" class="text-danger"></span>
                </div>
                
                <div class="form-group">
                    <label asp-for="UploadedBy" class="control-label"></label>
                    <input asp-for="UploadedBy" disabled value="@UserManager.GetUserAsync(User).Result.FullName" class="form-control" />
                    <span asp-validation-for="UploadedBy" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="Link" class="control-label"></label>
                    <input asp-for="Link" name="link" class="form-control" />
                    <span asp-validation-for="Link" id="link-error" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <input type="submit" id="submit-btn" value="Thêm" class="btn btn-primary" />
                </div>
            </form>
        </div>
        <div class="col-md-8">
            <iframe src=""
                    id="preview"
                    width="100%"
                    height="500"
                    frameborder="0"></iframe>
        </div>
    </div>

</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script>
        function Preview() {
            var preview = document.getElementById('preview');
            var file = document.querySelector('input[type=file]').files[0];
            var reader = new FileReader();

            reader.onloadend = function () {
                preview.src = reader.result;
            }

            if (file) {
                reader.readAsDataURL(file);
            } else {
                preview.src = "";
            }
        }

        document.getElementById('template-form').onsubmit = (e) => {
            e.preventDefault();
            let check = true;
            var form = document.getElementById('template-form');
            var formObject = new FormData(form);
            let title = formObject.get("title");
            let file = formObject.get("file");
            let link = formObject.get("link");
            let image = formObject.get("image");
            var allowedExtensions = /(\.jpg|\.jpeg|\.png)$/i;
            
            if (title.length === 0) {
                document.getElementById('title-error').innerHTML = "Title is required";
                check = false;
            } else {
                document.getElementById('title-error').innerHTML = "";
            }

            if (file.name.length === 0) {
                document.getElementById('file-error').innerHTML = "Template is required";
                check = false;
            } else if (file.name.split('.')[1] != 'html') {
                document.getElementById('file-error').innerHTML = "Template is must be a html file";
                check = false;
            } else {
                document.getElementById('file-error').innerHTML = "";
            }

            if (!image) {
                document.getElementById('image-error').innerHTML = "Image is required";
                check = false;
            } else if (!allowedExtensions.exec(image.name)) {
                document.getElementById('image-error').innerHTML = "Invalid file type. Only .jpg, .jpeg, and .png are allowed.";
                check = false;
            } else {
                document.getElementById('image-error').innerHTML = "";
            }

            var english = /^[A-Za-z0-9-]*$/;
            if (link.length === 0) {
                document.getElementById('link-error').innerHTML = "Link is required";
                check = false;
            } else if (!english.test(link)) {
                document.getElementById('link-error').innerHTML = "Link must be alphanumeric";
                check = false;
            } else {
                document.getElementById('link-error').innerHTML = "";
            }

            if (check) {
                form.submit();
            }
        }
    </script>
}
